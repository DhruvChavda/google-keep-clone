{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/EditNote.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","EditNote","props","useState","title","content","editedNote","setEditedNote","whenChanged","event","target","name","value","prev","className","onChange","placeholder","rows","onClick","console","log","update","id","bandh","preventDefault","Note","noteClass","setnoteClass","btn","setBtn","updateFlag","setUpdateFlag","remove","flag","CreateArea","note","setNote","adder","App","list","setList","updateNote","noteInd","newNote","map","ind","deleteNote","delNoteInd","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c299bd6c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n    return (\n        <header>\n            <h1>DMC's List</h1>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n    const year = new Date().getFullYear();\n    return (\n        <footer>\n            <p>Copyright â“’ DMC {year}</p>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\r\n\r\nfunction EditNote(props) {\r\n    const [editedNote, setEditedNote] = useState({\r\n        title: props.title,\r\n        content: props.content,\r\n    });\r\n\r\n    function whenChanged(event) {\r\n        const { name, value } = event.target;\r\n        setEditedNote((prev) => {\r\n            return { ...prev, [name]: value };\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <form className=\"edit-note\">\r\n                <input\r\n                    onChange={whenChanged}\r\n                    name='title'\r\n                    placeholder='Title'\r\n                    value={editedNote.title}\r\n                />\r\n                <textarea\r\n                    onChange={whenChanged}\r\n                    name='content'\r\n                    placeholder='Take a note...'\r\n                    value={editedNote.content}\r\n                    rows='3'\r\n                />\r\n                <button\r\n                    onClick={(event) => {\r\n                        console.log(editedNote);\r\n                        props.update(props.id, editedNote);\r\n                        props.bandh(false)\r\n                        event.preventDefault();\r\n                    }}>\r\n                    Save\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditNote;\r\n","import React, { useState } from \"react\";\nimport EditNote from \"./EditNote\";\n\nfunction Note(props) {\n    const [noteClass, setnoteClass] = useState(\"note\");\n    const [btn, setBtn] = useState(\"DONE\");\n    const [updateFlag, setUpdateFlag] = useState(false);\n\n    function toggleClass() {\n        if (noteClass === \"note\") {\n            setnoteClass(\"note done\");\n            setBtn(\"UNDONE\");\n        } else {\n            setnoteClass(\"note\");\n            setBtn(\"DONE\");\n        }\n    }\n\n    function toggleFlag() {\n        setUpdateFlag((flag) => !flag);\n    }\n\n    return (\n        <div className={noteClass}>\n            <h1>{props.title}</h1>\n            <p>{props.content}</p>\n            <button onClick={() => props.remove(props.id)}>DELETE</button>\n            <button onClick={() => toggleClass()}>{btn}</button>\n            <button onClick={() => toggleFlag()}>EDIT</button>\n            {updateFlag && <EditNote {...props} bandh={setUpdateFlag} />}\n        </div>\n    );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\n\nfunction CreateArea(props) {\n    const [note, setNote] = useState({\n        title: \"\",\n        content: \"\",\n    });\n\n    function whenChanged(event) {\n        const { name, value } = event.target;\n        // console.log(name + value);\n        setNote((prev) => {\n            return { ...prev, [name]: value };\n        });\n    }\n\n    return (\n        <div>\n            <form>\n                <input onChange={whenChanged} name='title' placeholder='Title' value={note.title} />\n                <textarea\n                    onChange={whenChanged}\n                    name='content'\n                    placeholder='Take a note...'\n                    rows='3'\n                    value={note.content}\n                />\n                <button\n                    onClick={(event) => {\n                        props.adder(note);\n                        setNote({ title: \"\", content: \"\" });\n                        event.preventDefault();\n                    }}>\n                    Add\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n    const [list, setList] = useState([]);\n\n    function addNote(note) {\n        setList((prev) => {\n            if (note.title !== \"\" || note.content !== \"\") return [...prev, note];\n            else return [...prev];\n        });\n    }\n\n    function updateNote(noteInd, newNote) {\n        // console.log(\"aaya aaya \", noteInd, \" yaaahooo!!! \", newNote);\n        setList((prev) => {\n            return prev.map((note, ind) => {\n                if (ind === noteInd) return newNote;\n                else return note;\n            });\n        });\n    }\n\n    function deleteNote(delNoteInd) {\n        setList((prev) => {\n            return prev.filter((note, ind) => ind !== delNoteInd);\n        });\n    }\n\n    function createNote(note, ind) {\n        return (\n            <Note\n                key={ind}\n                id={ind}\n                title={note.title}\n                content={note.content}\n                remove={deleteNote}\n                update={updateNote}\n            />\n        );\n    }\n    return (\n        <div>\n            <Header />\n            <CreateArea adder={addNote} />\n            {list.map(createNote)}\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}